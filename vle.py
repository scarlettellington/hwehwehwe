# -*- coding: utf-8 -*-
"""vle.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1i6MD4Bx9YnCXfyvbfYyWtBEzX3tU0ODj
"""

import pandas as pd

vle_data = pd.read_csv('vle.csv')

print(vle_data.head())
print(vle_data.info())
print(vle_data.describe())

print(vle_data.isnull().sum())

# Mengganti nilai-nilai yang hilang di kolom 'week_from' dan 'week_to' dengan nilai rata-rata
# Gantilah 'vle_data' dengan nama data frame yang sesuai dengan datasetmu
vle_data['week_from'].fillna(vle_data['week_from'].mean(), inplace=True)
vle_data['week_to'].fillna(vle_data['week_to'].mean(), inplace=True)

# Menampilkan hasil setelah pengisian nilai-nilai yang hilang
print(vle_data.isnull().sum())

# Mengganti 'vle_data' dengan nama data frame yang sesuai dengan datasetmu
# Statistik deskriptif untuk kolom-kolom numerik
numeric_stats = vle_data.describe()

# Statistik deskriptif untuk kolom-kolom non-numerik (misalnya, string)
categorical_stats = vle_data.describe(include='object')

# Menampilkan statistik deskriptif
print("Statistik deskriptif untuk kolom-kolom numerik:")
print(numeric_stats)

print("\nStatistik deskriptif untuk kolom-kolom non-numerik:")
print(categorical_stats)

import matplotlib.pyplot as plt
import seaborn as sns

plt.figure(figsize=(8, 6))
sns.histplot(vle_data['week_from'], bins=20, kde=True)
plt.xlabel('Week from')
plt.ylabel('Frequency')
plt.title('Histogram of week_from')
plt.show()

plt.figure(figsize=(8, 6))
sns.boxplot(x='week_from', data=vle_data)
plt.xlabel('Week from')
plt.title('Box Plot of week_from')
plt.show()

plt.figure(figsize=(8, 6))
sns.countplot(x='code_module', data=vle_data)
plt.xlabel('Code Module')
plt.ylabel('Count')
plt.title('Count Plot of code_module')
plt.xticks(rotation=45)
plt.show()

import matplotlib.pyplot as plt
import seaborn as sns

# Scatter Plot untuk hubungan antara 'week_from' dan 'week_to'
plt.figure(figsize=(10, 6))
sns.scatterplot(data=vle_data, x='week_from', y='week_to')
plt.xlabel('Week from')
plt.ylabel('Week to')
plt.title('Scatter Plot: Week from vs Week to')
plt.grid(True)
plt.show()

# Histogram untuk 'week_from' dan 'week_to'
plt.figure(figsize=(12, 6))

plt.subplot(1, 2, 1)
sns.histplot(vle_data['week_from'], bins=20, kde=True)
plt.xlabel('Week from')
plt.ylabel('Frequency')
plt.title('Histogram of week_from')

plt.subplot(1, 2, 2)
sns.histplot(vle_data['week_to'], bins=20, kde=True)
plt.xlabel('Week to')
plt.ylabel('Frequency')
plt.title('Histogram of week_to')

plt.tight_layout()
plt.show()

# Melakukan segmentasi data berdasarkan 'code_module'
module_groups = vle_data.groupby('code_module')

# Menghitung statistik deskriptif untuk setiap kelompok
for module, data in module_groups:
    print(f"Statistics for Module {module}:")
    print(data.describe())

# Membuat visualisasi untuk setiap kelompok
plt.figure(figsize=(12, 6))
for module, data in module_groups:
    sns.histplot(data['week_from'], bins=20, kde=True, label=f"Module {module}")

plt.xlabel('Week from')
plt.ylabel('Frequency')
plt.title('Histogram of week_from by Module')
plt.legend()
plt.show()

