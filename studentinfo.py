# -*- coding: utf-8 -*-
"""studentInfo.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16zzRCUPuQMoomFLMh_y0I9hFExGeqgT9
"""

import pandas as pd

studentInfo_data = pd.read_csv('studentInfo.csv')

print(studentInfo_data.head())
print(studentInfo_data.info())
print(studentInfo_data.describe())

print(studentInfo_data.isnull().sum())

import re

# Mengganti karakter '%' dan '-' dalam kolom "imd_band" dengan string kosong
studentInfo_data["imd_band"] = studentInfo_data["imd_band"].str.replace('%', '')
studentInfo_data["imd_band"] = studentInfo_data["imd_band"].str.replace('-', '')

# Mengonversi kolom "imd_band" menjadi tipe data numerik
studentInfo_data["imd_band"] = pd.to_numeric(studentInfo_data["imd_band"], errors='coerce')

# Mengisi nilai yang hilang dalam kolom "imd_band" dengan median
median_imd_band = studentInfo_data["imd_band"].median()
studentInfo_data["imd_band"].fillna(median_imd_band, inplace=True)

# Menyimpan dataset yang sudah diisi nilai yang hilang ke file baru (jika diperlukan)
# data.to_csv("studentInfo_filled.csv", index=False)

# Menampilkan 5 baris pertama dari dataset yang sudah diisi nilai yang hilang
print(studentInfo_data.head())

# Mengisi nilai yang hilang dalam kolom "imd_band" dengan median
median_imd_band = studentInfo_data["imd_band"].median()
studentInfo_data["imd_band"].fillna(median_imd_band, inplace=True)
print(studentInfo_data.isnull().sum())

# Menghitung statistik deskriptif untuk semua kolom
descriptive_stats = studentInfo_data.describe()

# Menampilkan statistik deskriptif
print(descriptive_stats)

import matplotlib.pyplot as plt

# Visualisasi Histogram untuk Kolom "studied_credits"
plt.figure(figsize=(8, 6))
plt.hist(studentInfo_data["studied_credits"], bins=20, color='skyblue', edgecolor='black')
plt.title("Histogram of Studied Credits")
plt.xlabel("Studied Credits")
plt.ylabel("Frequency")
plt.show()

# Visualisasi Box Plot untuk Kolom "num_of_prev_attempts"
plt.figure(figsize=(8, 6))
plt.boxplot(studentInfo_data["num_of_prev_attempts"], vert=False, patch_artist=True)
plt.title("Box Plot of Number of Previous Attempts")
plt.xlabel("Number of Previous Attempts")
plt.show()

# Visualisasi Pie Chart untuk Kolom "gender"
gender_counts = studentInfo_data["gender"].value_counts()
plt.figure(figsize=(6, 6))
plt.pie(gender_counts, labels=gender_counts.index, autopct='%1.1f%%', colors=['lightcoral', 'lightblue'])
plt.title("Gender Distribution")
plt.show()

import seaborn as sns

# Memilih kolom-kolom numerik untuk perhitungan korelasi
numerical_columns = ["num_of_prev_attempts", "studied_credits"]

# Menghitung matriks korelasi Pearson
correlation_matrix = studentInfo_data[numerical_columns].corr()

# Membuat heatmap untuk visualisasi matriks korelasi
plt.figure(figsize=(8, 6))
sns.heatmap(correlation_matrix, annot=True, cmap="coolwarm", fmt=".2f", linewidths=0.5)
plt.title("Correlation Matrix")
plt.show()

# Melakukan segmentasi berdasarkan kolom "gender"
segmented_data = {}
for gender, group in studentInfo_data.groupby("gender"):
    segmented_data[gender] = group

# Menampilkan contoh data dari setiap segmen
for gender, data_segment in segmented_data.items():
    print(f"Data Segment for Gender: {gender}")
    print(data_segment.head())
    print("\n")

# Temuan 1: Perbandingan jenis kelamin mahasiswa.
gender_counts = studentInfo_data["gender"].value_counts()
print("Temuan 1: Perbandingan jenis kelamin mahasiswa:")
print(gender_counts)

# Insight 1:
# Temuan ini menunjukkan distribusi jenis kelamin mahasiswa dalam dataset, yang dapat membantu universitas dalam merencanakan program pengajaran yang lebih inklusif.

# Temuan 2: Hubungan antara tingkat pendidikan tertinggi dan hasil akhir mahasiswa.
education_result = studentInfo_data.groupby("highest_education")["final_result"].value_counts()
print("Temuan 2: Hubungan antara tingkat pendidikan tertinggi dan hasil akhir mahasiswa:")
print(education_result)

# Insight 2:
# Temuan ini menunjukkan hubungan antara tingkat pendidikan tertinggi yang dimiliki mahasiswa dengan hasil akhir mereka. Ini dapat membantu universitas dalam mengidentifikasi faktor-faktor yang mempengaruhi prestasi akademik mahasiswa berdasarkan pendidikan mereka.

