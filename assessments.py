# -*- coding: utf-8 -*-
"""assessments.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/178cMzEqjFkVr6jQfjE_NjFp2JMWkTH18
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

assessments_data = pd.read_csv('assessments.csv')

print(assessments_data.head())
print()
print(assessments_data.info())
print()
print(assessments_data.describe())

print(assessments_data.isnull().sum())

#mngisi nilai hilang dgn rata2
mean_date = assessments_data['date'].mean()
assessments_data['date'].fillna(mean_date, inplace=True)

print(assessments_data.isnull().sum())

# Analisis Distribusi Data
print(assessments_data.describe())

# Menghapus nilai yang hilang dalam kolom 'date' (jika belum diisi sebelumnya)
mean_date = assessments_data['date'].mean()
assessments_data['date'].fillna(mean_date, inplace=True)

# Menampilkan hubungan antara 'weight' dan 'date' dengan scatter plot
plt.figure(figsize=(10, 6))
plt.scatter(assessments_data['date'], assessments_data['weight'], alpha=0.5)
plt.title('Hubungan antara Weight dan Date')
plt.xlabel('Date')
plt.ylabel('Weight')
plt.show()

# Mengelompokkan data berdasarkan 'assessment_type'
grouped_data = assessments_data.groupby('assessment_type')

# Melakukan analisis pada setiap kelompok
for name, group in grouped_data:
    print(f'Assessment Type: {name}')
    print(group.describe())
    # Anda dapat melakukan analisis tambahan di sini sesuai kebutuhan

# Misalnya, jika Anda ingin mengakses data untuk jenis asesmen tertentu, Anda bisa melakukannya seperti ini:
# tma_data = grouped_data.get_group('TMA')

# Menghitung jumlah setiap jenis asesmen
assessment_type_counts = assessments_data['assessment_type'].value_counts()

# Membuat diagram batang untuk memperlihatkan proporsi jenis asesmen
plt.figure(figsize=(8, 6))
assessment_type_counts.plot(kind='bar', color='skyblue')
plt.xlabel('Assessment Type')
plt.ylabel('Count')
plt.title('Distribution of Assessment Types')
plt.xticks(rotation=0)
plt.show()

# Menampilkan jumlah setiap jenis asesmen
print(assessment_type_counts)

# Analisis distribusi bobot asesmen
weight_stats = assessments_data['weight'].describe()

# Menampilkan statistik bobot asesmen
print(weight_stats)

